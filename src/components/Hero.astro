---
import Title from '../components/Title.astro'
import Description from '../components/Description.astro'
import Button from '../components/Button.astro'
import { Image } from 'astro:assets'
import HomePageVideo from '../assets/HomePageVideo.webm'
import { ArrowRight } from 'lucide-astro'
import { motion } from 'motion/react'
import { getTitleAnimation } from '../animations'
import Video from './Video.astro'
import SocialMediaStrip from './SocialMediaStrip.astro'

let titleAnimationCounter = 0
function getNewAnimationDelay() {
  titleAnimationCounter++
  return titleAnimationCounter * 0.15
}

function getHeroTitleAnimation() {
  return getTitleAnimation(getNewAnimationDelay())
}
---

<header
  id="header"
  class="flex w-full flex-col items-center gap-[20%] py-32 text-center lg:gap-[25%]"
>
  <div class="flex h-full flex-col items-center justify-center">
    <Title
      class="relative px-12 text-center !font-normal !leading-8 leading-[108px] md:!text-7xl lg:px-0 lg:!text-9xl"
    >
      <motion.span client:load {...getHeroTitleAnimation()}>
        welcome
      </motion.span>
      <motion.span client:load {...getHeroTitleAnimation()}> to </motion.span>
      <br class="hidden md:block" />
      <motion.span client:load {...getHeroTitleAnimation()}> the </motion.span>
      <motion.span
        client:load
        {...getHeroTitleAnimation()}
        className="italic text-coral"
      >
        permaweb
      </motion.span>
      <motion.span client:load {...getHeroTitleAnimation()}>
        of things
      </motion.span>
    </Title>
    <motion.span client:load {...getHeroTitleAnimation()}>
      <Description class="px-12 text-center lg:px-0">
        connect any IoT device to AO's decentralized compute with zero config.
        <br class="hidden sm:inline" />
        compute, store, automate anythingâ€”forever.</Description
      >
    </motion.span>
    <div class="mt-6 flex w-2/3 flex-col items-center gap-3 sm:gap-6 md:w-fit md:flex-col">
      <div class="relative w-full flex items-center justify-center">
        <div id="countdown-timer" class="flex flex-col items-center justify-center gap-1 rounded-xl bg-paper p-6 pt-8 text-lg font-bold text-coral shadow-md w-full" style="letter-spacing: 0.05em; min-width: 280px;">
          <span class="absolute top-2 left-1/2 -translate-x-1/2 text-base font-semibold text-coral tracking-wide pointer-events-none">Beta launches in</span>
          <div class="flex items-center gap-2 mt-2">
            <span id="days">15</span>d :
            <span id="hours">00</span>h :
            <span id="minutes">00</span>m :
            <span id="seconds">00</span>s
          </div>
        </div>
      </div>
      <motion.span client:load {...getHeroTitleAnimation()}>
        <Button class="w-full min-w-[220px] px-10 py-4 mt-2" id="waitlist-btn" type="button" isPrimary>
          Join the waitlist
        </Button>
      </motion.span>
    </div>
    <motion.span
      client:load
      {...getHeroTitleAnimation()}
      class="mx-auto translate-y-16 !transform"
    >
      <span class="block text-center text-lg font-medium opacity-70 mt-6">
        Introducing AO Buddy, just imagine the functionality and let the AO Buddy cook on AURA Create
      </span>
    </motion.span>
  </div>
</header>
<motion.span
  className="flex max-w-full px-8 lg:max-w-none lg:flex-none lg:px-0"
  client:load
  {...getHeroTitleAnimation()}
>
  <Video
    src={HomePageVideo}
    autoplay
    loop
    muted
    playsinline
    preload="none"
    class="mb-24 rounded-3xl shadow-md lg:mx-auto lg:w-3/4 dark:opacity-80"
  />
</motion.span>
<dialog id="waitlist-dialog" class="rounded-xl p-0 shadow-lg w-full max-w-sm z-50" style="top: 50%; left: 50%; transform: translate(-50%, -50%); position: fixed;">
  <form method="dialog" class="flex flex-col gap-4 p-6">
    <h2 class="text-xl font-bold mb-2">Join the Waitlist</h2>
    <input type="email" placeholder="Your email" required class="border rounded-lg px-3 py-2" />
    <Button type="submit">Submit</Button>
  </form>
</dialog>
<script type="module">
  const btn = document.getElementById('waitlist-btn');
  if (btn) {
    btn.addEventListener('click', () => {
      window.location.href = 'https://docs.google.com/forms/d/e/1FAIpQLSd4E-8F9J2A2cz8g-3wXr7GxaR6KolV_jfJpyXhrqLVtWFIvg/viewform?usp=dialog';
    });
  }
  // Countdown logic
  const countdown = () => {
    // Start: 8th May 2025, 13:00:00 UTC
    // End: 23rd May 2025, 13:00:00 UTC
    const end = new Date(Date.UTC(2025, 4, 23, 13, 0, 0)).getTime();
    const update = () => {
      const now = new Date().getTime();
      let diff = Math.max(0, end - now);
      const days = Math.floor(diff / (1000 * 60 * 60 * 24));
      diff -= days * (1000 * 60 * 60 * 24);
      const hours = Math.floor(diff / (1000 * 60 * 60));
      diff -= hours * (1000 * 60 * 60);
      const minutes = Math.floor(diff / (1000 * 60));
      diff -= minutes * (1000 * 60);
      const seconds = Math.floor(diff / 1000);
      document.getElementById('days').textContent = String(days).padStart(2, '0');
      document.getElementById('hours').textContent = String(hours).padStart(2, '0');
      document.getElementById('minutes').textContent = String(minutes).padStart(2, '0');
      document.getElementById('seconds').textContent = String(seconds).padStart(2, '0');
    };
    update();
    setInterval(update, 1000);
  };
  countdown();
</script>
