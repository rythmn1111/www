---
import Description from '../components/Description.astro'
import { getTitleAnimation } from '../animations'

import WorkspacesVideo from '../assets/Workspaces.webm'
import GlanceVideo from '../assets/Glance.webm'
import CompactModeVideo from '../assets/CompactMode.webm'
import SplitViewsVideo from '../assets/SplitViews.webm'

import Video from './Video.astro'

const {
  title1 = 'Productivity',
  title2 = 'at',
  title3 = 'its best',
} = Astro.props
---

<section
  id="Features"
  class="relative flex w-full flex-col px-4 text-start md:px-24 lg:mx-auto lg:w-3/4 lg:px-0 lg:py-36"
>
  <Description class="mb-2 text-6xl font-bold">
    <span>
      {title1}
    </span>
    <span>
      {title2}
    </span>
    <span>
      {title3}
    </span>
  </Description>
  <p class="lg:w-1/2">
    With AURA Create, you can make dynamic workflow for any IoT device and connect them with AO processes with our custom pub/sub routing, sketch the workflow with all the code files saving in the background.
  </p>
  <div
    class="mb-12 mt-6 flex flex-col gap-6 lg:flex-row lg:justify-between lg:gap-2"
  >
    <div class="flex w-full flex-col lg:w-1/3">
      <!-- Mobile tabs -->
      <div class="flex gap-2 overflow-x-auto overflow-y-clip lg:hidden">
        <button
          class="feature-tab whitespace-nowrap"
          data-active="true"
        >
          AO Buddy
        </button>
        <button
          class="feature-tab whitespace-nowrap"
        >
          Compact Mode
        </button>
        <button
          class="feature-tab whitespace-nowrap"
        >
          Glance
        </button>
        <button
          class="feature-tab whitespace-nowrap"
        >
          Split View
        </button>
      </div>

      <!-- Desktop features list -->
      <div id="features-list" class="hidden lg:flex lg:flex-col lg:gap-3">
        <div
          class="feature"
          data-active="true"
        >
          <Description class="text-2xl font-bold">AO Buddy</Description>
          <Description>
            your ai buddy that creates any IoT x AO flow, with flow it also generates code for the ao processes and your IoT devices, if you want to change the code simply use edit code button to change it with AO Buddy.
          </Description>
        </div>
        <div class="feature">
          <Description class="text-2xl font-bold">One To Many Workflow</Description>
          <Description>
            create as many IoT or AO nodes as you want connect them with any other node all while everything is getting connected in the background!!
          </Description>
        </div>
        <div class="feature">
          <Description class="text-2xl font-bold">All Local</Description>
          <Description>
            All the files and workspace are saved locally on your device in the selected folder, so you can use them in any IDE of your choice.
          </Description>
        </div>
        
      </div>

      <!-- Mobile description -->
      <div class="feature-description mt-4 lg:hidden"></div>
    </div>

    <div class="relative w-full lg:w-3/5">
      <div class="video-stack relative h-full w-full">
        <Video
          autoplay
          loop
          muted
          playsinline
          preload="none"
          class="feature-video"
          src={WorkspacesVideo}
          data-active="true"
        />
        <Video
          autoplay
          loop
          muted
          playsinline
          preload="none"
          class="feature-video"
          src={CompactModeVideo}
        />
        <Video
          autoplay
          loop
          muted
          playsinline
          preload="none"
          class="feature-video"
          src={GlanceVideo}
        />
        <Video
          autoplay
          loop
          muted
          playsinline
          preload="none"
          class="feature-video"
          src={SplitViewsVideo}
        />
      </div>
    </div>
  </div>
</section>

<script>
  const features = document.querySelectorAll('.feature, .feature-tab')
  const descriptions = [
    'Organize your tabs into Workspaces to keep your projects separate and organized, and switch between them with ease.',
    "Zen's Compact Mode gives you more screen real estate by hiding the tab bar when you don't need it, and showing it when you do.",
    "Zen's Glance lets you preview tabs without switching to them, so you can quickly find the page you're looking for.",
    "Zen's Split View lets you view up to 4 tabs side by side, so you can compare information or multitask easily.",
  ]

  // Set initial description
  const descriptionEl = document.querySelector('.feature-description')
  if (descriptionEl) {
    descriptionEl.textContent = descriptions[0]
  }

  function changeToFeature({
    target,
  }: {
    target: HTMLElement | undefined | null
  }) {
    target = target?.closest('.feature, .feature-tab')
    if (!target) return

    const index = Array.from(features).indexOf(target) % 4
    if (index === -1) return

    // Update both mobile and desktop elements
    features.forEach((f, i) => {
      if (i % 4 === index) {
        f.setAttribute('data-active', 'true')
      } else {
        f.removeAttribute('data-active')
      }
    })

    // Update mobile description
    const descriptionEl = document.querySelector('.feature-description')
    if (descriptionEl) {
      descriptionEl.textContent = descriptions[index]
    }

    const videos = document.querySelectorAll(
      '.feature-video',
    ) as NodeListOf<HTMLVideoElement>
    videos.forEach((vid, i) => {
      const yOffset = (i - index) * 20
      const zOffset = i === index ? 0 : -100 - Math.abs(i - index) * 50
      const scale = i === index ? 1 : 0.95
      const rotation = (i - index) * 3

      if (i === index) {
        vid.setAttribute('data-active', 'true')
        vid.style.opacity = '1'
        vid.style.transform = `translate3d(-50%, 0, 0) scale(${scale})`
        vid.style.zIndex = '10'
        vid.currentTime = 0
        vid.play()
      } else {
        vid.removeAttribute('data-active')
        vid.style.transform = `translate3d(-50%, ${yOffset}px, ${zOffset}px)
                             rotate3d(1, 0, 0, ${rotation}deg)
                             scale(${scale})`
        vid.style.zIndex = String(1 - Math.abs(i - index))
        vid.pause()
      }
    })
  }

  for (const feature of features) {
    feature.addEventListener('click', changeToFeature as any)
  }

  changeToFeature({ target: features[0] as any })
</script>

<style>
  .feature {
    @apply w-full cursor-pointer select-none rounded-lg p-4 opacity-0 hover:bg-subtle;
    transition: background 0.2s ease-in-out;

    &[data-active='true'] {
      @apply bg-subtle;
    }
  }

  .feature-tab {
    @apply rounded-lg px-4 py-2 text-lg font-medium opacity-0 hover:bg-subtle;
    transition: background 0.2s ease-in-out;

    &[data-active='true'] {
      @apply bg-subtle;
    }
  }

  .feature-description {
    @apply px-4 text-sm text-gray-600 dark:text-gray-300;
  }

  .video-stack {
    @apply aspect-video;
    perspective: 2000px;
    transform-style: preserve-3d;
    position: sticky;
    top: 0;
  }

  .feature-video {
    @apply left-1/2 hidden transform rounded-3xl shadow-md lg:absolute lg:mx-auto lg:block lg:w-full dark:opacity-80;
    max-width: 800px;
    transition: all 0.6s cubic-bezier(0.4, 0, 0.2, 1);
    position: absolute;
    top: 0;
    transform-origin: top center;
    backface-visibility: hidden;
    will-change: transform, opacity;
    transform: translate3d(-50%, 0, -100px) scale(0.95);
  }

  /* Dont animate translation on small screens */
  @media (max-width: 1024px) {
    .feature-video {
      position: absolute;
      inset: 0;
      width: 100%;
      height: 100%;
      opacity: 0;
      transform: none !important;
      display: none;
      object-fit: cover;

      &[data-active='true'] {
        display: block;
        opacity: 1;
      }
    }

    .video-stack {
      @apply overflow-hidden rounded-xl;
      position: relative;
      width: 100%;
      aspect-ratio: 16/9;
    }
  }
</style>